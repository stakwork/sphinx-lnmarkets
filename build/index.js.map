{"version":3,"sources":["../index.js"],"names":["dotenv","config","msg_types","Sphinx","MSG_TYPE","initted","lnmarketsToken","process","env","LNMARKETS_TOKEN","sphinxToken","SPHINX_TOKEN","url","init","client","Client","login","on","INSTALL","message","embed","MessageEmbed","setAuthor","setDescription","setThumbnail","botSVG","channel","send","MESSAGE","arr","content","split","length","cmd","fetch","headers","r","ok","json","j","balance","r2","j2","Array","isArray","embed2","setTitle","addFields","map","p","name","value","price","inline","takeprofit","margin","embed3"],"mappings":"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","sourcesContent":["import 'regenerator-runtime/runtime.js';\nimport * as Sphinx from 'sphinx-bot'\nimport * as fetch from 'node-fetch'\nimport dotenv from 'dotenv'\ndotenv.config()\n\nconst msg_types = Sphinx.MSG_TYPE\n\nlet initted = false\n\nconst lnmarketsToken = process.env.LNMARKETS_TOKEN\nconst sphinxToken = process.env.SPHINX_TOKEN\nconst url = 'https://api.lnmarkets.com'\n\nfunction init() {\n  if(initted) return\n  initted = true\n\n  const client = new Sphinx.Client()\n  client.login(sphinxToken)\n\n  client.on(msg_types.INSTALL, async (message) => {\n    const embed = new Sphinx.MessageEmbed()\n      .setAuthor('LNMarkets')\n      .setDescription('Welcome to LNMarkets!')\n      .setThumbnail(botSVG)\n    message.channel.send({ embed })\n  })\n\n  client.on(msg_types.MESSAGE, async (message) => {\n    const arr = message.content.split(' ')\n    if (arr.length < 2) return\n    if (arr[0]!=='/lnm') return\n    const cmd = arr[1]\n    \n    switch (cmd) {\n\n      case 'balance':\n        const r = await fetch(url+'/user',{\n          headers:{'Authorization': `Bearer ${lnmarketsToken}`, 'Accept': 'application/json'}\n        })\n        if (!r.ok) return\n        const j = await r.json()\n        if(!j.balance) return\n        const embed = new Sphinx.MessageEmbed()\n          .setAuthor('LNMarkets')\n          .setDescription('Your balance is: '+j.balance)\n          .setThumbnail(botSVG)\n        message.channel.send({ embed })\n\n      case 'positions':\n        const r2 = await fetch(url+'/positions',{\n          headers:{'Authorization': `Bearer ${lnmarketsToken}`, 'Accept': 'application/json'}\n        })\n        if (!r2.ok) return\n        const j2 = await r2.json()\n        if(!(j2 && Array.isArray(j2))) return\n        const embed2 = new Sphinx.MessageEmbed()\n          .setAuthor('LNMarkets')\n          .setTitle('Positions:')\n          .addFields(j2.map(p=>({\n            name:'Price:', value:p.price, inline:true,\n            name:'Takeprofit:', value:p.takeprofit, inline:true,\n            name:'Margin', value:p.margin, inline:true,\n          })))\n          .setThumbnail(botSVG)\n        message.channel.send({ embed:embed2 })\n        \n      default:\n        const embed3 = new Sphinx.MessageEmbed()\n          .setAuthor('LNMarkets')\n          .setTitle('LNMarkets Commands:')\n          .addFields([\n            { name: 'Balance', value: '/lnm balance' },\n            { name: 'Positions', value: '/lnm positions' },\n            { name: 'Help', value: '/lnm help' }\n          ])\n          .setThumbnail(botSVG)\n        message.channel.send({ embed:embed3 })\n        return\n    }\n  })\n}\n\nconst botSVG = `<svg viewBox=\"64 64 896 896\" height=\"12\" width=\"12\" fill=\"white\">\n  <path d=\"M300 328a60 60 0 10120 0 60 60 0 10-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 10120 0 60 60 0 10-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" />\n</svg>`\n\ninit()"],"file":"index.js"}